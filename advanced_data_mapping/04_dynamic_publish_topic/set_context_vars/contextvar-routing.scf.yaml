description: >
  Multi-tenant alert system using setContextVars for payload-based dynamic routing.
  Route alerts to tenant and priority-specific topics based on message content.

metadata:
  name: Multi-tenant Alert System - SetContextVars Dynamic Publishing

resources:
  # Route alerts based on payload content using setContextVars
  alertRoutingMapping:
    type: Cybus::Mapping
    properties:
      mappings:
      - subscribe:
          topic: system/alerts/incoming
        publish:
          topic: 'alerts/{tenant}/{priority}/notifications'
        rules:
        - setContextVars:
            vars:
              tenant: $.organization.tenant_id
              priority: $.alert.severity_level
        - transform:
            expression: |
              {
                "timestamp": $now(),
                "routing_context": {
                  "tenant": $context.vars.tenant,
                  "priority": $context.vars.priority,
                  "final_topic": "alerts/" & $context.vars.tenant & "/" & $context.vars.priority & "/notifications"
                },
                "alert_details": $,
                "processed_by": "setContextVars routing"
              }
    # Example Flow: Payload content determines output topic routing
    #
    # Input Topic: system/alerts/incoming
    # Input Payload: {
    #   "organization": {"tenant_id": "acme-corp", "name": "ACME Corporation"},
    #   "alert": {"severity_level": "critical", "message": "Database connection lost", "service": "user-auth"},
    #   "timestamp": "2024-10-28T10:30:00Z"
    # }
    #
    # SetContextVars: tenant = "acme-corp", priority = "critical"
    # Output Topic: alerts/acme-corp/critical/notifications
    # Output Payload: {
    #   "timestamp": 1730115600000,
    #   "routing_context": {
    #     "tenant": "acme-corp",
    #     "priority": "critical", 
    #     "final_topic": "alerts/acme-corp/critical/notifications"
    #   },
    #   "alert_details": {original payload},
    #   "processed_by": "setContextVars routing"
    # }

  # Complex business routing with conditional logic
  businessProcessRouting:
    type: Cybus::Mapping
    properties:
      mappings:
      - subscribe:
          topic: business/events/orders
        publish:
          topic: 'processing/{region}/{category}/{urgency}/orders'
        rules:
        - setContextVars:
            vars:
              region: $.customer.shipping_address.region
              category: |
                $.order.total_amount > 1000 ? "enterprise" :
                $.order.total_amount > 100 ? "business" : "standard"
              urgency: |
                $.order.rush_delivery = true ? "urgent" :
                $.order.total_amount > 500 ? "priority" : "normal"
        - transform:
            expression: |
              {
                "timestamp": $now(),
                "business_routing": {
                  "region": $context.vars.region,
                  "category": $context.vars.category,
                  "urgency": $context.vars.urgency,
                  "route_logic": {
                    "amount_based_category": $string($.order.total_amount) & " -> " & $context.vars.category,
                    "delivery_based_urgency": $string($.order.rush_delivery) & " -> " & $context.vars.urgency
                  }
                },
                "order_data": $,
                "final_destination": "processing/" & $context.vars.region & "/" & $context.vars.category & "/" & $context.vars.urgency & "/orders"
              }
    # Example Flow: Complex business logic routing
    #
    # Input Topic: business/events/orders
    # Input Payload: {
    #   "customer": {"shipping_address": {"region": "us-west"}},
    #   "order": {"total_amount": 1250.00, "rush_delivery": true, "items": [...]},
    #   "order_id": "ORD-2024-001"
    # }
    #
    # SetContextVars Logic:
    # - region = "us-west" (from shipping address)
    # - category = "enterprise" (amount > 1000) 
    # - urgency = "urgent" (rush_delivery = true)
    #
    # Output Topic: processing/us-west/enterprise/urgent/orders
    # Output Payload: {
    #   "timestamp": 1730115600000,
    #   "business_routing": {
    #     "region": "us-west",
    #     "category": "enterprise",
    #     "urgency": "urgent",
    #     "route_logic": {
    #       "amount_based_category": "1250 -> enterprise",
    #       "delivery_based_urgency": "true -> urgent"
    #     }
    #   },
    #   "order_data": {original payload},
    #   "final_destination": "processing/us-west/enterprise/urgent/orders"
    # }

  # IoT device routing based on payload metadata
  iotDeviceRouting:
    type: Cybus::Mapping
    properties:
      mappings:
      - subscribe:
          topic: iot/telemetry/incoming
        publish:
          topic: 'devices/{device_type}/{location}/{status}/data'
        rules:
        - setContextVars:
            vars:
              device_type: $.device.type
              location: $.device.metadata.installation_site
              status: |
                $.telemetry.battery_level < 20 ? "low-battery" :
                $.telemetry.signal_strength < -80 ? "poor-signal" :
                $.telemetry.error_count > 0 ? "maintenance-needed" : "operational"
        - transform:
            expression: |
              {
                "timestamp": $now(),
                "device_routing": {
                  "device_type": $context.vars.device_type,
                  "location": $context.vars.location,
                  "status": $context.vars.status,
                  "routing_decisions": {
                    "battery_check": $string($.telemetry.battery_level) & "% -> " & ($contains($context.vars.status, "battery") ? "flagged" : "ok"),
                    "signal_check": $string($.telemetry.signal_strength) & "dBm -> " & ($contains($context.vars.status, "signal") ? "flagged" : "ok"),
                    "error_check": $string($.telemetry.error_count) & " errors -> " & ($contains($context.vars.status, "maintenance") ? "flagged" : "ok")
                  }
                },
                "telemetry_data": $,
                "routing_path": "devices/" & $context.vars.device_type & "/" & $context.vars.location & "/" & $context.vars.status & "/data"
              }
    # Example Flow: IoT device health-based routing
    #
    # Input Topic: iot/telemetry/incoming
    # Input Payload: {
    #   "device": {
    #     "id": "temp-sensor-001",
    #     "type": "temperature-sensor",
    #     "metadata": {"installation_site": "warehouse-a"}
    #   },
    #   "telemetry": {
    #     "temperature": 23.5,
    #     "battery_level": 15,
    #     "signal_strength": -75,
    #     "error_count": 0
    #   }
    # }
    #
    # SetContextVars Logic:
    # - device_type = "temperature-sensor"
    # - location = "warehouse-a" 
    # - status = "low-battery" (battery_level < 20)
    #
    # Output Topic: devices/temperature-sensor/warehouse-a/low-battery/data
    # Output Payload: {
    #   "timestamp": 1730115600000,
    #   "device_routing": {
    #     "device_type": "temperature-sensor",
    #     "location": "warehouse-a",
    #     "status": "low-battery",
    #     "routing_decisions": {
    #       "battery_check": "15% -> flagged",
    #       "signal_check": "-75dBm -> ok", 
    #       "error_check": "0 errors -> ok"
    #     }
    #   },
    #   "telemetry_data": {original payload},
    #   "routing_path": "devices/temperature-sensor/warehouse-a/low-battery/data"
    # }