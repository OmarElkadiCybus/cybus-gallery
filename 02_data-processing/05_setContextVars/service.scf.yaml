description: >
  Simple setContextVars examples showing how to extract values from message data
  and use them as variables in transforms and dynamic topic routing.

metadata:
  name: SetContextVars Rule - Simple Examples

resources:
  # Example 1: Basic Variable Storage
  basicExample:
    type: Cybus::Mapping
    properties:
      mappings:
      - subscribe:
          topic: devices/sensors/data
        publish:
          topic: processed/sensor_data
        rules:
        - setContextVars:
            vars:
              deviceName: $.device.name      # Extract device name
              location: $.device.location    # Extract location
              sensorType: $.sensor.type      # Extract sensor type
        - transform:
            expression: |
              {
                "device_info": {
                  "name": $context.vars.deviceName,
                  "location": $context.vars.location,
                  "type": $context.vars.sensorType
                },
                "reading": $.value,
                "timestamp": $now(),
                "message": "Device " & $context.vars.deviceName & " at " & $context.vars.location
              }
    # Input Example:
    # Topic: devices/sensors/data
    # Message: {
    #   "device": {"name": "sensor-01", "location": "warehouse"},
    #   "sensor": {"type": "temperature"},
    #   "value": 23.5
    # }
    #
    # Variables Extracted:
    # deviceName = "sensor-01"
    # location = "warehouse" 
    # sensorType = "temperature"
    #
    # Output Example:
    # Topic: processed/sensor_data
    # Message: {
    #   "device_info": {
    #     "name": "sensor-01",
    #     "location": "warehouse",
    #     "type": "temperature"
    #   },
    #   "reading": 23.5,
    #   "timestamp": 1730115600000,
    #   "message": "Device sensor-01 at warehouse"
    # }

  # Example 2: Dynamic Topic Routing
  dynamicRouting:
    type: Cybus::Mapping
    properties:
      mappings:
      - subscribe:
          topic: sensors/incoming
        publish:
          topic: 'devices/{deviceName}/{location}/processed'
        rules:
        - setContextVars:
            vars:
              deviceName: $.device.name
              location: $.device.location
        - transform:
            expression: |
              {
                "routed_to": "devices/" & $context.vars.deviceName & "/" & $context.vars.location & "/processed",
                "device": $context.vars.deviceName,
                "location": $context.vars.location,
                "data": $
              }
    # Input Example:
    # Topic: sensors/incoming
    # Message: {
    #   "device": {"name": "temp-sensor-03", "location": "factory-floor"},
    #   "reading": {"temperature": 28.7, "humidity": 65}
    # }
    #
    # Variables Extracted:
    # deviceName = "temp-sensor-03"
    # location = "factory-floor"
    #
    # Output Example:
    # Topic: devices/temp-sensor-03/factory-floor/processed
    # Message: {
    #   "routed_to": "devices/temp-sensor-03/factory-floor/processed",
    #   "device": "temp-sensor-03",
    #   "location": "factory-floor",
    #   "data": {
    #     "device": {"name": "temp-sensor-03", "location": "factory-floor"},
    #     "reading": {"temperature": 28.7, "humidity": 65}
    #   }
    # }

  # Example 3: Conditional Variables
  conditionalExample:
    type: Cybus::Mapping
    properties:
      mappings:
      - subscribe:
          topic: temperature/readings
        publish:
          topic: 'alerts/{priority}/temperature'
        rules:
        - setContextVars:
            vars:
              priority: |
                $.temperature > 30 ? "high" : 
                $.temperature > 20 ? "normal" : "low"
              status: |
                $.temperature > 40 ? "critical" : 
                $.temperature < 10 ? "warning" : "ok"
        - transform:
            expression: |
              {
                "temperature": $.temperature,
                "priority": $context.vars.priority,
                "status": $context.vars.status,
                "alert_topic": "alerts/" & $context.vars.priority & "/temperature",
                "needs_attention": $context.vars.status != "ok"
              }
    # Input Examples:
    #
    # Example A - Normal Temperature:
    # Topic: temperature/readings
    # Message: {"temperature": 25, "sensor": "room-01"}
    # Variables: priority = "normal", status = "ok"
    # Output Topic: alerts/normal/temperature
    # Output Message: {
    #   "temperature": 25,
    #   "priority": "normal",
    #   "status": "ok", 
    #   "alert_topic": "alerts/normal/temperature",
    #   "needs_attention": false
    # }
    #
    # Example B - High Temperature Alert:
    # Topic: temperature/readings  
    # Message: {"temperature": 42, "sensor": "server-room"}
    # Variables: priority = "high", status = "critical"
    # Output Topic: alerts/high/temperature
    # Output Message: {
    #   "temperature": 42,
    #   "priority": "high",
    #   "status": "critical",
    #   "alert_topic": "alerts/high/temperature", 
    #   "needs_attention": true
    # }

  # Example 4: Multi-tenant Routing
  tenantRouting:
    type: Cybus::Mapping
    properties:
      mappings:
      - subscribe:
          topic: app/events
        publish:
          topic: 'tenants/{tenant}/events/{eventType}'
        rules:
        - setContextVars:
            vars:
              tenant: $.organization.id
              eventType: $.event.type
        - transform:
            expression: |
              {
                "tenant_id": $context.vars.tenant,
                "event_type": $context.vars.eventType,
                "routed_to": "tenants/" & $context.vars.tenant & "/events/" & $context.vars.eventType,
                "event_data": $
              }
    # Input Example:
    # Topic: app/events
    # Message: {
    #   "organization": {"id": "acme-corp", "name": "ACME Corporation"},
    #   "event": {"type": "user-login", "user_id": "john.doe", "timestamp": "2024-10-29T10:30:00Z"},
    #   "metadata": {"source": "web-app", "session_id": "sess_123"}
    # }
    #
    # Variables Extracted:
    # tenant = "acme-corp"
    # eventType = "user-login"
    #
    # Output Example:
    # Topic: tenants/acme-corp/events/user-login
    # Message: {
    #   "tenant_id": "acme-corp",
    #   "event_type": "user-login",
    #   "routed_to": "tenants/acme-corp/events/user-login",
    #   "event_data": {
    #     "organization": {"id": "acme-corp", "name": "ACME Corporation"},
    #     "event": {"type": "user-login", "user_id": "john.doe", "timestamp": "2024-10-29T10:30:00Z"},
    #     "metadata": {"source": "web-app", "session_id": "sess_123"}
    #   }
    # }
