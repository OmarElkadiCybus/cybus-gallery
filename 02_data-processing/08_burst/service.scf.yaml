description: >
  A burst rule example that aggregates sensor readings into batches
  for efficient processing and reduced network traffic.

metadata:
  name: Burst Rule - Batch Sensor Readings

resources:
  # Example 1: MaxSize Only - Burst when reaching message limit
  # Batches are created when 3 messages accumulate, regardless of time
  burstBySize:
    type: Cybus::Mapping
    properties:
      mappings:
      - subscribe:
          topic: sensors/temperature/rapid
        publish:
          topic: batched/temperature/by-size
        rules:
        - burst:
            maxSize: 3  # Burst after collecting 3 messages
    # Input Messages (arriving rapidly):
    # sensors/temperature/rapid: {"value": 23.1, "timestamp": "2025-10-29T10:00:00.100Z"}
    # sensors/temperature/rapid: {"value": 23.2, "timestamp": "2025-10-29T10:00:00.200Z"}  
    # sensors/temperature/rapid: {"value": 23.3, "timestamp": "2025-10-29T10:00:00.300Z"}  # Triggers burst
    #
    # Output Message (published immediately after 3rd message):
    # batched/temperature/by-size: [
    #   {"value": 23.1, "timestamp": "2025-10-29T10:00:00.100Z"},
    #   {"value": 23.2, "timestamp": "2025-10-29T10:00:00.200Z"},
    #   {"value": 23.3, "timestamp": "2025-10-29T10:00:00.300Z"}
    # ]

  # Example 2: Interval Only - Burst based on time window
  # Batches are created every 2 seconds, regardless of message count
  burstByTime:
    type: Cybus::Mapping
    properties:
      mappings:
      - subscribe:
          topic: sensors/pressure/sporadic
        publish:
          topic: batched/pressure/by-time
        rules:
        - burst:
            interval: 2000  # Burst every 2 seconds
    # Input Messages (arriving sporadically):
    # t=0ms:    sensors/pressure/sporadic: {"value": 1013.2, "timestamp": "2025-10-29T10:00:00.000Z"}
    # t=500ms:  sensors/pressure/sporadic: {"value": 1013.1, "timestamp": "2025-10-29T10:00:00.500Z"}
    # t=2000ms: Timer triggers burst
    #
    # Output Message (published at t=2000ms):
    # batched/pressure/by-time: [
    #   {"value": 1013.2, "timestamp": "2025-10-29T10:00:00.000Z"},
    #   {"value": 1013.1, "timestamp": "2025-10-29T10:00:00.500Z"}
    # ]

  # Example 3: Both MaxSize AND Interval - OR relationship
  # Batches are created when EITHER 5 messages accumulate OR 3 seconds pass
  burstByEither:
    type: Cybus::Mapping
    properties:
      mappings:
      - subscribe:
          topic: sensors/humidity/variable
        publish:
          topic: batched/humidity/flexible
        rules:
        - burst:
            maxSize: 5      # Burst when 5 messages collected
            interval: 3000  # OR burst every 3 seconds (whichever comes first)
    # Scenario A - Size limit reached first:
    # Input Messages (arriving quickly):
    # t=0ms:    sensors/humidity/variable: {"value": 45.1, "timestamp": "2025-10-29T10:00:00.000Z"}
    # t=100ms:  sensors/humidity/variable: {"value": 45.2, "timestamp": "2025-10-29T10:00:00.100Z"}
    # t=200ms:  sensors/humidity/variable: {"value": 45.3, "timestamp": "2025-10-29T10:00:00.200Z"}
    # t=300ms:  sensors/humidity/variable: {"value": 45.4, "timestamp": "2025-10-29T10:00:00.300Z"}
    # t=400ms:  sensors/humidity/variable: {"value": 45.5, "timestamp": "2025-10-29T10:00:00.400Z"}  # 5th message triggers burst
    #
    # Output Message (published at t=400ms - size limit reached before time limit):
    # batched/humidity/flexible: [
    #   {"value": 45.1, "timestamp": "2025-10-29T10:00:00.000Z"},
    #   {"value": 45.2, "timestamp": "2025-10-29T10:00:00.100Z"},
    #   {"value": 45.3, "timestamp": "2025-10-29T10:00:00.200Z"},
    #   {"value": 45.4, "timestamp": "2025-10-29T10:00:00.300Z"},
    #   {"value": 45.5, "timestamp": "2025-10-29T10:00:00.400Z"}
    # ]
    #
    # Scenario B - Time limit reached first:
    # Input Messages (arriving slowly):
    # t=0ms:    sensors/humidity/variable: {"value": 44.8, "timestamp": "2025-10-29T10:00:00.000Z"}
    # t=1000ms: sensors/humidity/variable: {"value": 44.9, "timestamp": "2025-10-29T10:00:01.000Z"}
    # t=3000ms: Timer triggers burst (only 2 messages, but time limit reached)
    #
    # Output Message (published at t=3000ms - time limit reached before size limit):
    # batched/humidity/flexible: [
    #   {"value": 44.8, "timestamp": "2025-10-29T10:00:00.000Z"},
    #   {"value": 44.9, "timestamp": "2025-10-29T10:00:01.000Z"}
    # ]

  # Example 4: Real-world Manufacturing Use Case
  # Production line monitoring with adaptive batching
  manufacturingMonitoring:
    type: Cybus::Mapping
    properties:
      mappings:
      - subscribe:
          topic: factory/line-a/+sensor/readings
        publish:
          topic: analytics/line-a/batched-readings
        rules:
        - burst:
            maxSize: 10     # Batch when 10 readings accumulated (high-frequency scenario)
            interval: 5000  # OR batch every 5 seconds (low-frequency scenario)
        - transform:
            expression: |
              {
                "batch_info": {
                  "message_count": $count($),
                  "batch_timestamp": $now(),
                  "trigger_reason": $count($) >= 10 ? "size_limit" : "time_limit",
                  "time_span": $max($.timestamp) - $min($.timestamp)
                },
                "sensor_readings": $
              }
    # Production Scenario - High activity (size limit triggers):
    # Multiple sensors sending data rapidly:
    # factory/line-a/temperature/readings: {"value": 68.5, "sensor": "temp-01", "timestamp": "2025-10-29T10:00:00.000Z"}
    # factory/line-a/vibration/readings: {"value": 0.05, "sensor": "vib-01", "timestamp": "2025-10-29T10:00:00.100Z"}
    # factory/line-a/pressure/readings: {"value": 4.2, "sensor": "press-01", "timestamp": "2025-10-29T10:00:00.200Z"}
    # ... (7 more messages)
    # factory/line-a/temperature/readings: {"value": 68.8, "sensor": "temp-01", "timestamp": "2025-10-29T10:00:00.900Z"}  # 10th message
    #
    # Output (triggered by size limit at 900ms):
    # analytics/line-a/batched-readings: {
    #   "batch_info": {
    #     "message_count": 10,
    #     "batch_timestamp": 1730203200900,
    #     "trigger_reason": "size_limit",
    #     "time_span": 900
    #   },
    #   "sensor_readings": [array of 10 sensor readings]
    # }
    #
    # Maintenance Scenario - Low activity (time limit triggers):
    # Only few sensors active during maintenance:
    # factory/line-a/temperature/readings: {"value": 22.1, "sensor": "temp-01", "timestamp": "2025-10-29T10:01:00.000Z"}
    # factory/line-a/pressure/readings: {"value": 0.1, "sensor": "press-01", "timestamp": "2025-10-29T10:01:02.000Z"}
    # (5 seconds pass)
    #
    # Output (triggered by time limit at 5000ms):
    # analytics/line-a/batched-readings: {
    #   "batch_info": {
    #     "message_count": 2,
    #     "batch_timestamp": 1730203265000,
    #     "trigger_reason": "time_limit", 
    #     "time_span": 2000
    #   },
    #   "sensor_readings": [array of 2 sensor readings]
    # }