description: >
  PLC status register bit extraction for equipment monitoring.
  Converts packed binary flags into individual boolean status indicators.

metadata:
  name: PLC Bit Extraction - Equipment Status Flags
  version: 1.0.0

parameters:
  plcHost:
    type: string
    default: "192.168.1.50"
    description: "PLC IP address"

resources:
  # PLC Connection
  plcConnection:
    type: Cybus::Connection
    properties:
      protocol: Modbus
      connection:
        host: !ref plcHost
        port: 502

  # Status Register - Packed Flags
  plcStatusRegister:
    type: Cybus::Endpoint
    properties:
      protocol: Modbus
      connection: !ref plcConnection
      subscribe:
        fc: 3
        address: 100
        length: 1
        interval: 2000
      topic: plc/status/raw

  # Bit Extraction Mapping
  bitExtractionMapping:
    type: Cybus::Mapping
    properties:
      mappings:
      - subscribe:
          topic: ${Cybus::MqttRoot}/plc/status/raw
        publish:
          topic: production/equipment/status-flags
        rules:
        - transform:
            expression: |
              {
                /* Extract individual bits from PLC status register using bitwise AND */
                /* Bit 0 (value 1): Check if conveyor is running */
                "conveyor_running": ($[0] & 1) > 0,          /* Bitwise AND with 1 (binary: 00000001) */
                
                /* Bit 1 (value 2): Check if robot is armed */
                "robot_armed": ($[0] & 2) > 0,               /* Bitwise AND with 2 (binary: 00000010) */
                
                /* Bit 2 (value 4): Check if safety systems are OK */
                "safety_ok": ($[0] & 4) > 0,                 /* Bitwise AND with 4 (binary: 00000100) */
                
                /* Bit 3 (value 8): Check if emergency stop is active */
                "emergency_stop": ($[0] & 8) > 0,            /* Bitwise AND with 8 (binary: 00001000) */
                
                /* Bit 4 (value 16): Check if system is in automatic mode */
                "auto_mode": ($[0] & 16) > 0,                /* Bitwise AND with 16 (binary: 00010000) */
                
                /* Combined logic: Can operate if safety is OK AND emergency stop is NOT active */
                "can_operate": (($[0] & 4) > 0) and (($[0] & 8) = 0),  /* Boolean AND: safety_ok AND NOT emergency_stop */
                
                /* Processing timestamp */
                "timestamp": $now()                          /* Current timestamp when bit extraction occurred */
              }

# Example Input Message:
#
# Topic: plc/status/raw
# Payload: [23] (binary: 00010111)
# Bit meanings:
# - Bit 0 (1): conveyor_running
# - Bit 1 (2): robot_armed  
# - Bit 2 (4): safety_ok
# - Bit 3 (8): emergency_stop
# - Bit 4 (16): auto_mode

# Expected Output:
# Topic: production/equipment/status-flags
# {
#   "conveyor_running": true,
#   "robot_armed": true,
#   "safety_ok": true,
#   "emergency_stop": false,
#   "auto_mode": true,
#   "can_operate": true,
#   "timestamp": 1730529600000
# }

# KEY CONCEPTS:
# ✅ Bitwise AND (&): Testing individual bits in packed data
# ✅ Boolean logic: Combining multiple conditions with 'and'/'or'
# ✅ Bit positions: Understanding binary flag representations