description: >
  Array mapping examples - multiple topics with different roots.
  Focus on core array mapping concepts.

metadata:
  name: Array Mapping Examples

resources:
  # Example: Array with Labels and Collect Rule
  # 
  # Input Messages:
  # factory/machine/status: {"status": "ok", "id": "machine-001", "temperature": 45}
  # building/hvac/status: {"status": "ok", "id": "hvac-main", "setpoint": 22}  
  # vehicle/sensor/status: {"status": "warning", "id": "truck-001", "fuel": 75}
  #
  # After Collect Rule:
  # {
  #   "factory": {"status": "ok", "id": "machine-001", "temperature": 45},
  #   "building": {"status": "ok", "id": "hvac-main", "setpoint": 22},
  #   "vehicle": {"status": "warning", "id": "truck-001", "fuel": 75}
  # }
  #
  # Output Message:
  # Published to system/monitoring/status: {
  #   "SystemStatus": false,
  #   "timestamp": 1730203200000,
  #   "source_count": 3,
  #   "details": {
  #     "factory_ok": true,
  #     "building_ok": true,
  #     "vehicle_ok": false
  #   }
  # }
  # (SystemStatus is false because vehicle.status is "warning", not "ok")
  
  basicArrayMapping:
    type: Cybus::Mapping
    properties:
      mappings:
      - subscribe:
          # Array of topics with different roots
          - topic: factory/machine/status
            label: factory
          - topic: building/hvac/status
            label: building
          - topic: vehicle/sensor/status
            label: vehicle
        publish:
          topic: system/monitoring/status
        rules:
        - collect: {}  # Collect all subscribed sources
        - transform:
            expression: |
              {
                "SystemStatus": $lookup($, 'factory').status = "ok" and $lookup($, 'building').status = "ok" and $lookup($, 'vehicle').status = "ok",
                "timestamp": $now(),
                "source_count": 3,
                "details": {
                  "factory_ok": $lookup($, 'factory').status = "ok",
                  "building_ok": $lookup($, 'building').status = "ok", 
                  "vehicle_ok": $lookup($, 'vehicle').status = "ok"
                }
              }

  # Example: Mixed Topics and Endpoints
  # 
  # Input Messages:
  # factory/conveyor/speed: {"speed": 150, "direction": "forward", "load": 75}
  # OPC UA Temperature: {"value": 68.5, "quality": "Good", "timestamp": "2024-10-27T10:30:00Z"}
  # warehouse/inventory/count: {"count": 1250, "location": "A1-B3", "last_updated": "2024-10-27T10:29:45Z"}
  #
  # After Collect Rule:
  # {
  #   "conveyor_mqtt": {"speed": 150, "direction": "forward", "load": 75},
  #   "cnc_opcua": {"value": 68.5, "quality": "Good", "timestamp": "2024-10-27T10:30:00Z"},
  #   "inventory_mqtt": {"count": 1250, "location": "A1-B3", "last_updated": "2024-10-27T10:29:45Z"}
  # }
  #
  # Output Message:
  # Published to monitoring/mixed-sources:
  # {
  #   "timestamp": "2024-10-27T10:30:15.123Z",
  #   "conveyor_speed": 150,
  #   "cnc_temperature": 68.5,
  #   "inventory_count": 1250,
  #   "all_systems_active": true
  # }

  # Simplified mixed example - MQTT topics only for valid syntax
  mixedMapping:
    type: Cybus::Mapping
    properties:
      mappings:
      - subscribe:
          # Mix topics from different systems (simulating mixed sources)
          - topic: factory/conveyor/speed
            label: conveyor_mqtt
          - topic: opcua/machine/temperature  # Simulated OPC UA data via MQTT
            label: cnc_opcua
          - topic: warehouse/inventory/count
            label: inventory_mqtt
        publish:
          topic: monitoring/mixed-sources
        rules:
        - collect: {}
        - transform:
            expression: |
              {
                "timestamp": $now(),
                "conveyor_speed": $lookup($, 'conveyor_mqtt').speed,
                "cnc_temperature": $lookup($, 'cnc_opcua').value,
                "inventory_count": $lookup($, 'inventory_mqtt').count,
                "all_systems_active": $lookup($, 'conveyor_mqtt').speed > 0 and $lookup($, 'cnc_opcua').value < 80 and $lookup($, 'inventory_mqtt').count > 0
              }